category Exp = Syntax
category e in Exp
category Int = "Any Integer"
category i in Int

system Exp ~>e (Exp ∪ Int)
system Exp ~>b Bool

meta add = (Int × Int) -> Int


rule Add1
        <e_1> ~>e <e_1'>
--------------------------------
<e_1 "+" e_2> ~>e <e_1' "+" e_2>

rule Add2
        <e_2> ~>e <e_2'>
--------------------------------
<i_1 "+" e_2> ~>e <i_1 "+" e_2'>

rule Add3
  i := add(i_1, i_2)
-----------------------
<i_1 "+" i_2> ~>e <i>


rule AddOne1
    <e> ~>e <e'>
----------------------
<e "++"> ~>e <e' "++">

rule AddOne2
i' := add(i, "1")
-----------------
<i "++"> ~>e <i'>


rule IfCond
                         <e1> ~>e <e1'>
----------------------------------------------------------------
<"if" e1 "then" e2 "else" e3> ~>e <"if" e1' "then" e2 "else" e3>

rule IfTrue
-----------------------------------------
<"if" ("true") "then" e "else" _> ~>e <e>

rule IfFalse
-------------------------------------
<"if" ("false") "then" _ "else" e> ~>e <e>

